/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Interface;

import NoyauFonctionnel.DMR;
import NoyauFonctionnel.Patient;
import java.awt.Dimension;
import java.awt.Toolkit;

/**
 *
 * @author Pauline KIEFER
 */
public class Affiche_Patients extends javax.swing.JFrame {

    /**
     * Creates new form Affiche_Patients
     */
    public Affiche_Patients() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setSize(new java.awt.Dimension(500, 500));

        jLabel1.setText("Liste des patients : ");

        jButton1.setText("Afficher");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        jButton2.setText("Rechercher un patient");

        jButton3.setText("Retour");

        jButton4.setText("Déconnexion");

        jButton5.setText("Ajouter un patient");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71)
                        .addComponent(jButton5))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addGap(206, 206, 206)
                        .addComponent(jButton4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton1, jButton3});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton3))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton5))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton1, jButton3});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton2, jButton4, jButton5});

    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        /*boolean continuer=true;
            System.out.println(p.toString());
            if (p.getNom().equals(nom) && p.getPrenom().equals(prenom) && p.getNumSecu().equals(secu) && p.getCle()==cle ||(p.getNom().equals(nom) && p.getPrenom().equals(prenom))) {;
                //si c'est le même patient on l'aaffiche
                jList1.addElement(p.toString());
                repaint();
                continuer=false;
            }
            else {  //sinon on dit qu'il n'existe pas 
                jList1.addElement("Le patient n'existe pas.");
            }*/
        //A COMPLETER EN FONCTION DE LA BASE DE DONNEES
    }//GEN-LAST:event_jButton1ActionPerformed

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        RechercherPatient appel;  //pour passer à la fenêtre DMR (quand clique sur un patient)
        appel = new RechercherPatient();

            //on récupere la taille de l'écran
            Dimension tailleEcran = Toolkit.getDefaultToolkit().getScreenSize();

            //on place la fenêtre au milieu
            appel.setLocation((tailleEcran.width - appel.getSize().width) / 2, (tailleEcran.height - appel.getSize().height) / 2);

            appel.setVisible(true);
            appel.setLocationRelativeTo(null);
            dispose();
}

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
        ConnexionInterface appel;  //pour passer à la fenêtre connexion (bouton retour)
        appel = new ConnexionInterface();

            //on récupere la taille de l'écran
            Dimension tailleEcran = Toolkit.getDefaultToolkit().getScreenSize();

            //on place la fenêtre au milieu
            appel.setLocation((tailleEcran.width - appel.getSize().width) / 2, (tailleEcran.height - appel.getSize().height) / 2);

            appel.setVisible(true);
            appel.setLocationRelativeTo(null);
            dispose();
}

private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {
   // ICI
}
    
private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        if (ConnexionInterface.getDroitDeCreation()==true){
            AjouterPatient appel = new AjouterPatient();  //pour passer à la fenêtre ajouter patient 

            //on récupère la taille de l'écran
            Dimension tailleEcran = Toolkit.getDefaultToolkit().getScreenSize();

            //on place la fenêtre au milieu
            appel.setLocation((tailleEcran.width - appel.getSize().width) / 2, (tailleEcran.height - appel.getSize().height) / 2);

            appel.setVisible(true);
            appel.setLocationRelativeTo(null);
            dispose();
        }
        else {
            System.out.println("Droit de création non accordé.");
        }
    }  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private String nom;
    private String prenom;
    
     /*DMR_interface appel;  //pour passer à la fenêtre DMR (quand clique sur un patient)
        appel = new DMR_interface();

            //on récupere la taille de l'écran
            Dimension tailleEcran = Toolkit.getDefaultToolkit().getScreenSize();

            //on place la fenêtre au milieu
            appel.setLocation((tailleEcran.width - appel.getSize().width) / 2, (tailleEcran.height - appel.getSize().height) / 2);

            appel.setVisible(true);
            appel.setLocationRelativeTo(null);
            dispose();*/
    
    //MEME PROBLEME DE METHODE STATIQUE
    /*nom = Patient.getNom();
    prenom = Patient.getPrenom();*/

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Affiche_Patients.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Affiche_Patients.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Affiche_Patients.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Affiche_Patients.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Affiche_Patients().setVisible(true);
            }
        });
    }
}
