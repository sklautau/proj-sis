package Interface;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrameClient.java
 *
 * Created on 6 févr. 2009, 10:18:51
 */
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import library.interfaces.Action;
import library.interfaces.ClientHL7;
import library.interfaces.MessageInterface;
import library.interfaces.Patient;
import library.interfaces.PatientLocation;

/**
 *
 * @author Anthony CROUZET Polytech'Grenoble TIS3
 */
public class FrameClient_adaptation extends javax.swing.JFrame {

    private Patient patient;
    private Action action;
    private char sex = 'X';
    private String card = "cardAdmettre";
    private int nbr;
    private final SimpleDateFormat formateur = new SimpleDateFormat("dd/MM/yyyy");

    /** Creates new form FrameClient */
    public FrameClient_adaptation() {
        initComponents();
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation((screen.width - this.getSize().width)/2,(screen.height - this.getSize().height)/2);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panelCard = new javax.swing.JPanel();
        panelMessage = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        comboBoxADT = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        panelPatient = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        fieldIdPat = new javax.swing.JTextField();
        fieldNomPat = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        fieldPrenomPat = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        fieldDateNaissance = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        comboBoxSexe = new javax.swing.JComboBox();
        jLabelDateSortie = new javax.swing.JLabel();
        jPanelMort = new javax.swing.JPanel();
        comboBoxMort = new javax.swing.JComboBox();
        jLabelMort = new javax.swing.JLabel();
        fieldDateMort = new javax.swing.JFormattedTextField();
        comboBoxClass = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        jFormattedTextFieldDateSortie = new javax.swing.JFormattedTextField();
        jFormattedTextFieldDateAdmi = new javax.swing.JFormattedTextField();
        jLabelDateAdmi = new javax.swing.JLabel();
        panelAction = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jButtonConnexion = new javax.swing.JButton();
        panelSousAction = new javax.swing.JPanel();
        panelAdmission = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        panelDecharge = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        paneltransfere = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelAdmettre = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabelDateFin = new javax.swing.JLabel();
        fieldDateFin = new javax.swing.JFormattedTextField();
        comboBoxCodeAction = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        comboBoxNatureRole = new javax.swing.JComboBox();
        jPanelPersonne = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        fieldNomRole = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        fieldPrenomRole = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        fieldTelPat1 = new javax.swing.JTextField();
        fieldDateDebut = new javax.swing.JFormattedTextField();
        jLabelDateDebut = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabelPointOfCare = new javax.swing.JLabel();
        jTextFieldPointOfCare = new javax.swing.JTextField();
        jLabelType = new javax.swing.JLabel();
        jTextFieldChambre = new javax.swing.JTextField();
        jLabelLit = new javax.swing.JLabel();
        jTextFieldLit = new javax.swing.JTextField();
        jLabelStatus = new javax.swing.JLabel();
        jTextFieldStatus = new javax.swing.JTextField();
        jLabelBatiment = new javax.swing.JLabel();
        jTextFieldEtage = new javax.swing.JTextField();
        jLabelEtage = new javax.swing.JLabel();
        jTextFieldBatiment = new javax.swing.JTextField();
        jLabelChambre = new javax.swing.JLabel();
        jComboBoxTypeLoc = new javax.swing.JComboBox();
        jPanel8 = new javax.swing.JPanel();
        jLabelPointOfCare1 = new javax.swing.JLabel();
        jTextFieldPointOfCare1 = new javax.swing.JTextField();
        jLabelType1 = new javax.swing.JLabel();
        jTextFieldChambre1 = new javax.swing.JTextField();
        jLabelLit1 = new javax.swing.JLabel();
        jTextFieldLit1 = new javax.swing.JTextField();
        jLabelStatus1 = new javax.swing.JLabel();
        jTextFieldStatus1 = new javax.swing.JTextField();
        jLabelBatiment1 = new javax.swing.JLabel();
        jTextFieldEtage1 = new javax.swing.JTextField();
        jLabelEtage1 = new javax.swing.JLabel();
        jTextFieldBatiment1 = new javax.swing.JTextField();
        jLabelChambre1 = new javax.swing.JLabel();
        jComboBoxTypeLoc1 = new javax.swing.JComboBox();
        panelConexion = new javax.swing.JPanel();
        panelPatient1 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        fieldHost = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        fieldPort = new javax.swing.JFormattedTextField();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        labelFin = new javax.swing.JLabel();
        labelFin1 = new javax.swing.JLabel();
        labelFin2 = new javax.swing.JLabel();
        labelFin3 = new javax.swing.JLabel();
        labelFin4 = new javax.swing.JLabel();
        labelFin5 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(450, 589));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        panelCard.setLayout(new java.awt.CardLayout());

        panelMessage.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton1.setText("Admettre");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(259, Short.MAX_VALUE)
                .add(jButton1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .add(jButton1)
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelMessage.add(jPanel1, gridBagConstraints);

        comboBoxADT.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Admission d’un patient hospitalisé", "Mutation d’un patient ", "Sortie hôpital d’un patient" }));
        comboBoxADT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxADTActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        panelMessage.add(comboBoxADT, gridBagConstraints);

        jLabel1.setText("Action :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panelMessage.add(jLabel1, gridBagConstraints);

        panelPatient.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panelPatient.setLayout(new java.awt.GridBagLayout());

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Patient");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        panelPatient.add(jLabel2, gridBagConstraints);

        fieldIdPat.setMinimumSize(new java.awt.Dimension(244, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
        panelPatient.add(fieldIdPat, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
        panelPatient.add(fieldNomPat, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel3.setText("Identification :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panelPatient.add(jLabel3, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel4.setText("Nom :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panelPatient.add(jLabel4, gridBagConstraints);

        jLabel5.setText("Prénom :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panelPatient.add(jLabel5, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
        panelPatient.add(fieldPrenomPat, gridBagConstraints);

        jLabel6.setText("Date de naissance :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panelPatient.add(jLabel6, gridBagConstraints);

        try {
            fieldDateNaissance.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        fieldDateNaissance.setToolTipText("dd/MM/yyyy");
        fieldDateNaissance.setMinimumSize(new java.awt.Dimension(68, 20));
        fieldDateNaissance.setPreferredSize(new java.awt.Dimension(68, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panelPatient.add(fieldDateNaissance, gridBagConstraints);

        jLabel9.setText("Sexe :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panelPatient.add(jLabel9, gridBagConstraints);

        comboBoxSexe.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Inconnu", "Femme", "Homme", "Autre" }));
        comboBoxSexe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxSexeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
        panelPatient.add(comboBoxSexe, gridBagConstraints);

        jLabelDateSortie.setText("Date sortie :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panelPatient.add(jLabelDateSortie, gridBagConstraints);

        jPanelMort.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanelMort.setLayout(new java.awt.GridBagLayout());

        comboBoxMort.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Non décédé", "Décédé", " " }));
        comboBoxMort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxMortActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
        jPanelMort.add(comboBoxMort, gridBagConstraints);

        jLabelMort.setText("Date :");
        jLabelMort.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanelMort.add(jLabelMort, gridBagConstraints);

        try {
            fieldDateMort.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        fieldDateMort.setToolTipText("dd/MM/yyyy");
        fieldDateMort.setEnabled(false);
        fieldDateMort.setMinimumSize(new java.awt.Dimension(68, 20));
        fieldDateMort.setPreferredSize(new java.awt.Dimension(68, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanelMort.add(fieldDateMort, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
        panelPatient.add(jPanelMort, gridBagConstraints);

        comboBoxClass.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Urgence", "Hospitalisé", "Externe", "Pré-admission", "Récurrent", "Obstétrique", "Compte commercial", "Non applicable", "Inconnu" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
        panelPatient.add(comboBoxClass, gridBagConstraints);

        jLabel15.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel15.setText("Catégorie :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panelPatient.add(jLabel15, gridBagConstraints);

        jFormattedTextFieldDateSortie.setText("  /  /    ");
        jFormattedTextFieldDateSortie.setToolTipText("dd/MM/yyyy");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
        panelPatient.add(jFormattedTextFieldDateSortie, gridBagConstraints);

        jFormattedTextFieldDateAdmi.setText("  /  /    ");
        jFormattedTextFieldDateAdmi.setToolTipText("dd/MM/yyyy");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
        panelPatient.add(jFormattedTextFieldDateAdmi, gridBagConstraints);

        jLabelDateAdmi.setText("Date d'admission :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panelPatient.add(jLabelDateAdmi, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panelMessage.add(panelPatient, gridBagConstraints);

        panelCard.add(panelMessage, "cardPat");

        panelAction.setLayout(new java.awt.GridBagLayout());

        jButtonConnexion.setText("Connexion");
        jButtonConnexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConnexionActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(273, Short.MAX_VALUE)
                .add(jButtonConnexion)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jButtonConnexion)
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelAction.add(jPanel4, gridBagConstraints);

        panelSousAction.setLayout(new java.awt.CardLayout());

        jLabel42.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        jLabel42.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel42.setText("Admission patient");

        org.jdesktop.layout.GroupLayout panelAdmissionLayout = new org.jdesktop.layout.GroupLayout(panelAdmission);
        panelAdmission.setLayout(panelAdmissionLayout);
        panelAdmissionLayout.setHorizontalGroup(
            panelAdmissionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 412, Short.MAX_VALUE)
            .add(panelAdmissionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(panelAdmissionLayout.createSequentialGroup()
                    .add(0, 0, Short.MAX_VALUE)
                    .add(jLabel42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 379, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(0, 0, Short.MAX_VALUE)))
        );
        panelAdmissionLayout.setVerticalGroup(
            panelAdmissionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
            .add(panelAdmissionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(panelAdmissionLayout.createSequentialGroup()
                    .add(0, 0, Short.MAX_VALUE)
                    .add(jLabel42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(0, 0, Short.MAX_VALUE)))
        );

        panelSousAction.add(panelAdmission, "cardAdmettre");

        jLabel41.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel41.setText("Décharger patient");

        org.jdesktop.layout.GroupLayout panelDechargeLayout = new org.jdesktop.layout.GroupLayout(panelDecharge);
        panelDecharge.setLayout(panelDechargeLayout);
        panelDechargeLayout.setHorizontalGroup(
            panelDechargeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 412, Short.MAX_VALUE)
            .add(panelDechargeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(panelDechargeLayout.createSequentialGroup()
                    .add(0, 0, Short.MAX_VALUE)
                    .add(jLabel41, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 379, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(0, 0, Short.MAX_VALUE)))
        );
        panelDechargeLayout.setVerticalGroup(
            panelDechargeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
            .add(panelDechargeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(panelDechargeLayout.createSequentialGroup()
                    .add(0, 0, Short.MAX_VALUE)
                    .add(jLabel41, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(0, 0, Short.MAX_VALUE)))
        );

        panelSousAction.add(panelDecharge, "cardDecharger");

        jLabel43.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        jLabel43.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel43.setText("Transfèrer patient");

        org.jdesktop.layout.GroupLayout paneltransfereLayout = new org.jdesktop.layout.GroupLayout(paneltransfere);
        paneltransfere.setLayout(paneltransfereLayout);
        paneltransfereLayout.setHorizontalGroup(
            paneltransfereLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 412, Short.MAX_VALUE)
            .add(paneltransfereLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(paneltransfereLayout.createSequentialGroup()
                    .add(0, 0, Short.MAX_VALUE)
                    .add(jLabel43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 379, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(0, 0, Short.MAX_VALUE)))
        );
        paneltransfereLayout.setVerticalGroup(
            paneltransfereLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
            .add(paneltransfereLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(paneltransfereLayout.createSequentialGroup()
                    .add(0, 0, Short.MAX_VALUE)
                    .add(jLabel43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(0, 0, Short.MAX_VALUE)))
        );

        panelSousAction.add(paneltransfere, "cardTrans");

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panelAction.add(panelSousAction, gridBagConstraints);

        jPanelAdmettre.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanelAdmettre.setLayout(new java.awt.GridBagLayout());

        jLabel23.setText("Code de l’action :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanelAdmettre.add(jLabel23, gridBagConstraints);

        jLabelDateFin.setText("Date de fin d’effet :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanelAdmettre.add(jLabelDateFin, gridBagConstraints);

        try {
            fieldDateFin.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        fieldDateFin.setToolTipText("dd/MM/yyyy");
        fieldDateFin.setMinimumSize(new java.awt.Dimension(68, 20));
        fieldDateFin.setPreferredSize(new java.awt.Dimension(68, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanelAdmettre.add(fieldDateFin, gridBagConstraints);

        comboBoxCodeAction.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ajouter ", "Supprimer", "Inchangé ", "Mettre à jour" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
        jPanelAdmettre.add(comboBoxCodeAction, gridBagConstraints);

        jLabel16.setText("Nature du rôle :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanelAdmettre.add(jLabel16, gridBagConstraints);

        comboBoxNatureRole.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Médecin prescripteur", "Médecin \"Attending\"", "Médecin consultant", "Médecin de famille", "Médecin adressant", "Médecin correspondant", "Médecin Traitant", "Remplaçant du médecin traitant", " " }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
        jPanelAdmettre.add(comboBoxNatureRole, gridBagConstraints);

        jPanelPersonne.setBorder(javax.swing.BorderFactory.createTitledBorder("Personne dans le rôle"));
        jPanelPersonne.setLayout(new java.awt.GridBagLayout());

        jLabel17.setText("Nom :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanelPersonne.add(jLabel17, gridBagConstraints);

        fieldNomRole.setMinimumSize(new java.awt.Dimension(128, 20));
        fieldNomRole.setPreferredSize(new java.awt.Dimension(128, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
        jPanelPersonne.add(fieldNomRole, gridBagConstraints);

        jLabel18.setText("Prénom :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanelPersonne.add(jLabel18, gridBagConstraints);

        fieldPrenomRole.setMinimumSize(new java.awt.Dimension(128, 20));
        fieldPrenomRole.setPreferredSize(new java.awt.Dimension(128, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
        jPanelPersonne.add(fieldPrenomRole, gridBagConstraints);

        jLabel21.setText("Téléphone :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanelPersonne.add(jLabel21, gridBagConstraints);

        fieldTelPat1.setMinimumSize(new java.awt.Dimension(128, 20));
        fieldTelPat1.setPreferredSize(new java.awt.Dimension(128, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
        jPanelPersonne.add(fieldTelPat1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanelAdmettre.add(jPanelPersonne, gridBagConstraints);

        try {
            fieldDateDebut.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        fieldDateDebut.setToolTipText("dd/MM/yyyy");
        fieldDateDebut.setMinimumSize(new java.awt.Dimension(68, 20));
        fieldDateDebut.setPreferredSize(new java.awt.Dimension(68, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanelAdmettre.add(fieldDateDebut, gridBagConstraints);

        jLabelDateDebut.setText("Date de prise d’effet :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanelAdmettre.add(jLabelDateDebut, gridBagConstraints);

        jTabbedPane1.addTab("Rôle", jPanelAdmettre);

        jPanel7.setLayout(new java.awt.GridBagLayout());

        jLabelPointOfCare.setText("Point of care");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel7.add(jLabelPointOfCare, gridBagConstraints);

        jTextFieldPointOfCare.setMinimumSize(new java.awt.Dimension(140, 28));
        jTextFieldPointOfCare.setPreferredSize(new java.awt.Dimension(140, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel7.add(jTextFieldPointOfCare, gridBagConstraints);

        jLabelType.setText("Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel7.add(jLabelType, gridBagConstraints);

        jTextFieldChambre.setMinimumSize(new java.awt.Dimension(140, 28));
        jTextFieldChambre.setPreferredSize(new java.awt.Dimension(140, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel7.add(jTextFieldChambre, gridBagConstraints);

        jLabelLit.setText("Lit");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel7.add(jLabelLit, gridBagConstraints);

        jTextFieldLit.setMinimumSize(new java.awt.Dimension(140, 28));
        jTextFieldLit.setPreferredSize(new java.awt.Dimension(140, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel7.add(jTextFieldLit, gridBagConstraints);

        jLabelStatus.setText("Status");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel7.add(jLabelStatus, gridBagConstraints);

        jTextFieldStatus.setMinimumSize(new java.awt.Dimension(140, 28));
        jTextFieldStatus.setPreferredSize(new java.awt.Dimension(140, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel7.add(jTextFieldStatus, gridBagConstraints);

        jLabelBatiment.setText("Bâtiment");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel7.add(jLabelBatiment, gridBagConstraints);

        jTextFieldEtage.setMinimumSize(new java.awt.Dimension(140, 28));
        jTextFieldEtage.setPreferredSize(new java.awt.Dimension(140, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel7.add(jTextFieldEtage, gridBagConstraints);

        jLabelEtage.setText("Etage");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel7.add(jLabelEtage, gridBagConstraints);

        jTextFieldBatiment.setMinimumSize(new java.awt.Dimension(140, 28));
        jTextFieldBatiment.setPreferredSize(new java.awt.Dimension(140, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel7.add(jTextFieldBatiment, gridBagConstraints);

        jLabelChambre.setText("Chambre");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel7.add(jLabelChambre, gridBagConstraints);

        jComboBoxTypeLoc.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Clinic", "Department", "Home", "Nursing Unit", "Provider Office", "Phone", "SNF" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel7.add(jComboBoxTypeLoc, gridBagConstraints);

        jTabbedPane1.addTab("Localisation attribuée", jPanel7);

        jPanel8.setLayout(new java.awt.GridBagLayout());

        jLabelPointOfCare1.setText("Point of care");
        jLabelPointOfCare1.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel8.add(jLabelPointOfCare1, gridBagConstraints);

        jTextFieldPointOfCare1.setEnabled(false);
        jTextFieldPointOfCare1.setMinimumSize(new java.awt.Dimension(140, 28));
        jTextFieldPointOfCare1.setPreferredSize(new java.awt.Dimension(140, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel8.add(jTextFieldPointOfCare1, gridBagConstraints);

        jLabelType1.setText("Type");
        jLabelType1.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel8.add(jLabelType1, gridBagConstraints);

        jTextFieldChambre1.setEnabled(false);
        jTextFieldChambre1.setMinimumSize(new java.awt.Dimension(140, 28));
        jTextFieldChambre1.setPreferredSize(new java.awt.Dimension(140, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel8.add(jTextFieldChambre1, gridBagConstraints);

        jLabelLit1.setText("Lit");
        jLabelLit1.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel8.add(jLabelLit1, gridBagConstraints);

        jTextFieldLit1.setEnabled(false);
        jTextFieldLit1.setMinimumSize(new java.awt.Dimension(140, 28));
        jTextFieldLit1.setPreferredSize(new java.awt.Dimension(140, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel8.add(jTextFieldLit1, gridBagConstraints);

        jLabelStatus1.setText("Status");
        jLabelStatus1.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel8.add(jLabelStatus1, gridBagConstraints);

        jTextFieldStatus1.setEnabled(false);
        jTextFieldStatus1.setMinimumSize(new java.awt.Dimension(140, 28));
        jTextFieldStatus1.setPreferredSize(new java.awt.Dimension(140, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel8.add(jTextFieldStatus1, gridBagConstraints);

        jLabelBatiment1.setText("Bâtiment");
        jLabelBatiment1.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel8.add(jLabelBatiment1, gridBagConstraints);

        jTextFieldEtage1.setEnabled(false);
        jTextFieldEtage1.setMinimumSize(new java.awt.Dimension(140, 28));
        jTextFieldEtage1.setPreferredSize(new java.awt.Dimension(140, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel8.add(jTextFieldEtage1, gridBagConstraints);

        jLabelEtage1.setText("Etage");
        jLabelEtage1.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel8.add(jLabelEtage1, gridBagConstraints);

        jTextFieldBatiment1.setEnabled(false);
        jTextFieldBatiment1.setMinimumSize(new java.awt.Dimension(140, 28));
        jTextFieldBatiment1.setPreferredSize(new java.awt.Dimension(140, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel8.add(jTextFieldBatiment1, gridBagConstraints);

        jLabelChambre1.setText("Chambre");
        jLabelChambre1.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel8.add(jLabelChambre1, gridBagConstraints);

        jComboBoxTypeLoc1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Clinic", "Department", "Home", "Nursing Unit", "Provider Office", "Phone", "SNF" }));
        jComboBoxTypeLoc1.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel8.add(jComboBoxTypeLoc1, gridBagConstraints);

        jTabbedPane1.addTab("Localisation préalable", jPanel8);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        panelAction.add(jTabbedPane1, gridBagConstraints);

        panelCard.add(panelAction, "cardAction");

        panelConexion.setPreferredSize(new java.awt.Dimension(467, 557));
        panelConexion.setLayout(new java.awt.GridBagLayout());

        panelPatient1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panelPatient1.setLayout(new java.awt.GridBagLayout());

        jLabel12.setFont(new java.awt.Font("Lucida Sans", 1, 16)); // NOI18N
        jLabel12.setText("Connexion");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panelPatient1.add(jLabel12, gridBagConstraints);

        fieldHost.setMinimumSize(new java.awt.Dimension(128, 20));
        fieldHost.setPreferredSize(new java.awt.Dimension(128, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 4);
        panelPatient1.add(fieldHost, gridBagConstraints);

        jLabel13.setText("Host :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panelPatient1.add(jLabel13, gridBagConstraints);

        jLabel14.setText("Port :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panelPatient1.add(jLabel14, gridBagConstraints);

        try {
            fieldPort.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        fieldPort.setMinimumSize(new java.awt.Dimension(48, 20));
        fieldPort.setPreferredSize(new java.awt.Dimension(48, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 4);
        panelPatient1.add(fieldPort, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 4, 5, 4);
        panelConexion.add(panelPatient1, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton2.setText("Connexion");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jButton2)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .add(jButton2)
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 4, 5, 4);
        panelConexion.add(jPanel2, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel5.add(labelFin, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel5.add(labelFin1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel5.add(labelFin2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel5.add(labelFin3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel5.add(labelFin4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel5.add(labelFin5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 4, 5, 4);
        panelConexion.add(jPanel5, gridBagConstraints);

        panelCard.add(panelConexion, "cardConnexion");

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        getContentPane().add(panelCard, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Accueil CHU");

        org.jdesktop.layout.GroupLayout jPanel6Layout = new org.jdesktop.layout.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 422, Short.MAX_VALUE)
            .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel6Layout.createSequentialGroup()
                    .add(0, 0, Short.MAX_VALUE)
                    .add(jLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 422, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(0, 0, Short.MAX_VALUE)))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 30, Short.MAX_VALUE)
            .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel6Layout.createSequentialGroup()
                    .add(0, 0, Short.MAX_VALUE)
                    .add(jLabel7)
                    .add(0, 0, Short.MAX_VALUE)))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jPanel6, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (this.champsPatOk()) {

            this.creePatient();

            this.setValPatient();

            //changer de panel
            java.awt.CardLayout c = (CardLayout) this.panelCard.getLayout();
            c.show(this.panelCard, "cardAction");
            c = (CardLayout) this.panelSousAction.getLayout();
            c.show(this.panelSousAction, card);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void comboBoxSexeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxSexeActionPerformed
        int i = this.comboBoxSexe.getSelectedIndex();
        switch (i) {
            case 0: {
                this.sex = 'U';
                break;
            }
            case 1: {
                this.sex = 'F';
                break;
            }
            case 2: {
                this.sex = 'M';
                break;
            }
            case 3: {
                this.sex = 'O';
                break;
            }
            case 4: {
                this.sex = 'A';
                break;
            }
        }
    }//GEN-LAST:event_comboBoxSexeActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String host = this.fieldHost.getText();
        Integer port = Integer.parseInt(this.fieldPort.getText());
        ClientHL7 c = new ClientHL7();
        c.connexion(host, port);
        switch (this.nbr) {
            case 0: {
                c.admit(patient);
                break;
            }
            case 1: {
                c.transPat(patient);
                break;
            }
            case 2: {
                c.endPat(patient);
                break;
            }
        }
        MessageInterface messageAck = c.getMsg();
        this.labelFin1.setText("ID message : " + messageAck.getId());
        this.labelFin2.setText(messageAck.getAcknowledgmentCodeString());
        this.labelFin3.setText("ID Ack: " + messageAck.getIdAck());


    }//GEN-LAST:event_jButton2ActionPerformed

    private void comboBoxADTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxADTActionPerformed
        String[] button = {"Admettre", "Transférer", "Décharger"};
        String[] cads = {"cardAdmettre", "cardTrans", "cardDecharger"};
        this.nbr = this.comboBoxADT.getSelectedIndex();
        this.card = cads[nbr];
        this.jButton1.setText(button[nbr]);
        if (nbr == 0 || nbr == 1) {
            this.enableTabLocAvt(false);
            this.enableTabLoc(true);
        }
        if (nbr == 2) {
            this.enableTabLocAvt(true);
            this.enableTabLoc(false);
        }
    }//GEN-LAST:event_comboBoxADTActionPerformed

    private void jButtonConnexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConnexionActionPerformed
        int codeNbr = this.comboBoxCodeAction.getSelectedIndex();
        String code = null;
        switch (codeNbr) {
            case 0: {
                code = "AD";
                break;
            }
            case 1: {
                code = "CO";
                break;
            }
            case 2: {
                code = "DE";
                break;
            }
            case 3: {
                code = "LI";
                break;
            }
            case 4: {
                code = "UC";
                break;
            }
            case 5: {
                code = "UN";
                break;
            }
            case 6: {
                code = "UC";
                break;
            }
            case 7: {
                code = "UP";
                break;
            }
        }

        int roleNbr = this.comboBoxNatureRole.getSelectedIndex();
        String role = null;
        switch (roleNbr) {
            case 0: {
                role = "AD";
                break;
            }
            case 1: {
                role = "AT";
                break;
            }
            case 2: {
                role = "CP";
                break;
            }
            case 3: {
                role = "FHCP";
                break;
            }
            case 4: {
                role = "PP";
                break;
            }
            case 5: {
                role = "RP";
                break;
            }
            case 6: {
                role = "RT";
                break;
            }

        }

        String rolePersonne = this.fieldNomRole.getText();
        this.action = new Action(code, role, rolePersonne);

        //Assigne Patient Location
        if (nbr == 0 || nbr == 1) {
            PatientLocation assignedLocation = new PatientLocation(this.patient);
            assignedLocation = this.setValPatLoc(assignedLocation);
            this.patient.setAssignedPatLocation(assignedLocation);
        }
        if (nbr == 2) {
            PatientLocation priorLocation = new PatientLocation(this.patient);
            priorLocation = this.setValPatLocAvt(priorLocation);
            this.patient.setPriorPatLocation(priorLocation);
        }


        //changer de panel
        java.awt.CardLayout c = (CardLayout) this.panelCard.getLayout();
        c.show(this.panelCard, "cardConnexion");
}//GEN-LAST:event_jButtonConnexionActionPerformed

    private void comboBoxMortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxMortActionPerformed
        switch (this.comboBoxMort.getSelectedIndex()) {
            case 0: {
                this.fieldDateMort.setEnabled(false);
                this.jLabelMort.setEnabled(false);
                break;
            }
            case 1: {
                this.fieldDateMort.setEnabled(true);
                this.jLabelMort.setEnabled(true);
                break;
            }
            case 3: {
                this.fieldDateMort.setEnabled(false);
                this.jLabelMort.setEnabled(false);
                break;
            }
        }

}//GEN-LAST:event_comboBoxMortActionPerformed

    private boolean champsPatOk() {
        boolean r = true;
        this.initBackgroundField();

        if (this.fieldNomPat.getText().length() == 0) {
            r = false;
            this.fieldNomPat.setBackground(Color.RED);
        }
        String s = this.fieldIdPat.getText();
        int t = s.length();
        if (t == 0) {
            r = false;
            this.fieldIdPat.setBackground(Color.RED);
        }

        for (int i = 0; i < t; i++) {
            if (s.charAt(i) != '0' & s.charAt(i) != '1' & s.charAt(i) != '2' &
                    s.charAt(i) != '3' & s.charAt(i) != '4' & s.charAt(i) != '5' &
                    s.charAt(i) != '6' & s.charAt(i) != '7' & s.charAt(i) != '8' & s.charAt(i) != '9') {
                r = false;
                this.fieldIdPat.setBackground(Color.RED);
            }
        }

        //Date Decharge
        if (this.nbr == 2) {
            String dateDechargeString = this.jFormattedTextFieldDateSortie.getText();
            if (dateDechargeString.equals("  /  /    ")) {
                r = false;
                this.jFormattedTextFieldDateSortie.setBackground(Color.RED);
            }
        }
        return r;

    }

    private void enableTabLocAvt(boolean b) {
        this.jTextFieldBatiment1.setEnabled(b);
        this.jLabelBatiment1.setEnabled(b);
        this.jTextFieldChambre1.setEnabled(b);
        this.jLabelChambre1.setEnabled(b);
        this.jTextFieldEtage1.setEnabled(b);
        this.jLabelEtage1.setEnabled(b);
        this.jTextFieldLit1.setEnabled(b);
        this.jLabelLit1.setEnabled(b);
        this.jTextFieldPointOfCare1.setEnabled(b);
        this.jLabelPointOfCare1.setEnabled(b);
        this.jTextFieldStatus1.setEnabled(b);
        this.jLabelStatus1.setEnabled(b);
        this.jComboBoxTypeLoc1.setEnabled(b);
        this.jLabelType1.setEnabled(b);
    }

    private void enableTabLoc(boolean b) {
        this.jTextFieldBatiment.setEnabled(b);
        this.jLabelBatiment.setEnabled(b);
        this.jTextFieldChambre.setEnabled(b);
        this.jLabelChambre.setEnabled(b);
        this.jTextFieldEtage.setEnabled(b);
        this.jLabelEtage.setEnabled(b);
        this.jTextFieldLit.setEnabled(b);
        this.jLabelLit.setEnabled(b);
        this.jTextFieldPointOfCare.setEnabled(b);
        this.jLabelPointOfCare.setEnabled(b);
        this.jTextFieldStatus.setEnabled(b);
        this.jLabelStatus.setEnabled(b);
        this.jComboBoxTypeLoc.setEnabled(b);
        this.jLabelType.setEnabled(b);
    }

    private void creePatient() {
        try {
            //Nom de famille
            String surname;
            if (!(this.fieldNomPat.getText().length() < 0)) {
                surname = this.fieldNomPat.getText();


                Integer id = Integer.parseInt(this.fieldIdPat.getText());

                int classePat = this.comboBoxClass.getSelectedIndex();
                char classe = 'U';

                switch (classePat) {
                    case -1: {
                        break;
                    }
                    case 0: {
                        classe = 'E';
                        break;
                    }
                    case 1: {
                        classe = 'I';
                        break;
                    }
                    case 2: {
                        classe = 'O';
                        break;
                    }
                    case 3: {
                        classe = 'P';
                        break;
                    }
                    case 4: {
                        classe = 'R';
                        break;
                    }
                    case 5: {
                        classe = 'B';
                        break;
                    }
                    case 6: {
                        classe = 'C';
                        break;
                    }
                    case 7: {
                        classe = 'N';
                        break;
                    }
                    case 8: {
                        classe = 'U';
                        break;
                    }
                }

                this.patient = new Patient(id, surname, classe);
            }
        } catch (NumberFormatException e) {
            System.out.println("Erreur d'identification patient : " + e.getMessage());
        }
    }

    private void setValPatient() {
        //Prénom de famille
        this.patient.setFirstName(this.fieldPrenomPat.getText());


        //Date de naissance
        Date dateBirth = null;
        String s = this.fieldDateNaissance.getText();
        try {
            if (!s.equals("  /  /    ")) {
                dateBirth = formateur.parse(s);
                this.patient.setBirth(dateBirth);
            }
        } catch (ParseException ex) {
            Logger.getLogger(FrameClient_adaptation.class.getName()).log(Level.SEVERE, null, ex);
        }

        //sexe
        if (this.sex != 'X') {
            this.patient.setSex(this.sex);
        }

        //Mort
        switch (this.comboBoxMort.getSelectedIndex()) {
            case 0: {
                this.patient.setDeath(false);
                break;
            }
            case 1: {
                Date dateDeath = null;
                String dateDeathString = this.fieldDateMort.getText();
                try {
                    if (!dateDeathString.equals("  /  /    ")) {
                        dateDeath = formateur.parse(dateDeathString);
                        this.patient.setDeath(dateDeath);
                    } else {
                        this.patient.setDeath(true);
                    }
                } catch (ParseException ex) {
                    Logger.getLogger(FrameClient_adaptation.class.getName()).log(Level.SEVERE, null, ex);
                }

                break;

            }
            case 2: {
                this.patient.restDeath();
                break;
            }
        }

        //Date Decharge
        Date dateDecharge = null;
        String dateDechargeString = this.jFormattedTextFieldDateSortie.getText();
        try {
            if (!dateDechargeString.equals("  /  /    ")) {
                dateDecharge = formateur.parse(dateDechargeString);
                this.patient.setDateDicharge(dateDecharge);
            }

        } catch (ParseException ex) {
            Logger.getLogger(FrameClient_adaptation.class.getName()).log(Level.SEVERE, null, ex);
        }

    //Date Admission


    }

    private PatientLocation setValPatLoc(PatientLocation patLocation) {

        //Point of care
        String field = this.jTextFieldPointOfCare.getText();
        if (field != null) {
            patLocation.setPointOfCare(field);
        }

        //Chambre
        field = this.jTextFieldChambre.getText();
        if (field != null) {
            patLocation.setRoom(field);
        }

        //Lit
        field = this.jTextFieldLit.getText();
        if (field != null) {
            patLocation.setBed(field);
        }

        //Facility

        //Status
        field = this.jTextFieldStatus.getText();
        if (field != null) {
            patLocation.setStatus(field);
        }

        //PersonLocationType
        int nbrItem = this.jComboBoxTypeLoc.getSelectedIndex();
        switch (nbrItem) {
            case 1: {
                patLocation.setPersonLocationType("C");
                break;
            }
            case 2: {
                patLocation.setPersonLocationType("D");
                break;
            }
            case 3: {
                patLocation.setPersonLocationType("H");
                break;
            }
            case 4: {
                patLocation.setPersonLocationType("N");
                break;
            }
            case 5: {
                patLocation.setPersonLocationType("O");
                break;
            }
            case 6: {
                patLocation.setPersonLocationType("P");
                break;
            }
            case 7: {
                patLocation.setPersonLocationType("S");
                break;
            }

        }

        //Batiment
        field = this.jTextFieldBatiment.getText();
        if (field != null) {
            patLocation.setBuilding(field);
        }

        //Etage
        field = this.jTextFieldEtage.getText();
        if (field != null) {
            patLocation.setFloor(field);
        }

        return patLocation;
    }

    private PatientLocation setValPatLocAvt(PatientLocation patLocation) {
        //Point of care
        String field = this.jTextFieldPointOfCare1.getText();
        if (field != null) {
            patLocation.setPointOfCare(field);
        }

        //Chambre
        field = this.jTextFieldChambre1.getText();
        if (field != null) {
            patLocation.setRoom(field);
        }

        //Lit
        field = this.jTextFieldLit1.getText();
        if (field != null) {
            patLocation.setBed(field);
        }

        //Facility

        //Status
        field = this.jTextFieldStatus1.getText();
        if (field != null) {
            patLocation.setStatus(field);
        }

        //PersonLocationType
        int nbrItem = this.jComboBoxTypeLoc1.getSelectedIndex();
        switch (nbrItem) {
            case 1: {
                patLocation.setPersonLocationType("C");
                break;
            }
            case 2: {
                patLocation.setPersonLocationType("D");
                break;
            }
            case 3: {
                patLocation.setPersonLocationType("H");
                break;
            }
            case 4: {
                patLocation.setPersonLocationType("N");
                break;
            }
            case 5: {
                patLocation.setPersonLocationType("O");
                break;
            }
            case 6: {
                patLocation.setPersonLocationType("P");
                break;
            }
            case 7: {
                patLocation.setPersonLocationType("S");
                break;
            }

        }

        //Batiment
        field = this.jTextFieldBatiment1.getText();
        if (field != null) {
            patLocation.setBuilding(field);
        }

        //Etage
        field = this.jTextFieldEtage1.getText();
        if (field != null) {
            patLocation.setFloor(field);
        }

        return patLocation;
    }

    private void initBackgroundField() {
        this.fieldIdPat.setBackground(Color.WHITE);
        this.fieldNomPat.setBackground(Color.WHITE);
        this.jFormattedTextFieldDateSortie.setBackground(Color.WHITE);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new FrameClient_adaptation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox comboBoxADT;
    private javax.swing.JComboBox comboBoxClass;
    private javax.swing.JComboBox comboBoxCodeAction;
    private javax.swing.JComboBox comboBoxMort;
    private javax.swing.JComboBox comboBoxNatureRole;
    private javax.swing.JComboBox comboBoxSexe;
    private javax.swing.JFormattedTextField fieldDateDebut;
    private javax.swing.JFormattedTextField fieldDateFin;
    private javax.swing.JFormattedTextField fieldDateMort;
    private javax.swing.JFormattedTextField fieldDateNaissance;
    private javax.swing.JTextField fieldHost;
    private javax.swing.JTextField fieldIdPat;
    private javax.swing.JTextField fieldNomPat;
    private javax.swing.JTextField fieldNomRole;
    private javax.swing.JFormattedTextField fieldPort;
    private javax.swing.JTextField fieldPrenomPat;
    private javax.swing.JTextField fieldPrenomRole;
    private javax.swing.JTextField fieldTelPat1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonConnexion;
    private javax.swing.JComboBox jComboBoxTypeLoc;
    private javax.swing.JComboBox jComboBoxTypeLoc1;
    private javax.swing.JFormattedTextField jFormattedTextFieldDateAdmi;
    private javax.swing.JFormattedTextField jFormattedTextFieldDateSortie;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelBatiment;
    private javax.swing.JLabel jLabelBatiment1;
    private javax.swing.JLabel jLabelChambre;
    private javax.swing.JLabel jLabelChambre1;
    private javax.swing.JLabel jLabelDateAdmi;
    private javax.swing.JLabel jLabelDateDebut;
    private javax.swing.JLabel jLabelDateFin;
    private javax.swing.JLabel jLabelDateSortie;
    private javax.swing.JLabel jLabelEtage;
    private javax.swing.JLabel jLabelEtage1;
    private javax.swing.JLabel jLabelLit;
    private javax.swing.JLabel jLabelLit1;
    private javax.swing.JLabel jLabelMort;
    private javax.swing.JLabel jLabelPointOfCare;
    private javax.swing.JLabel jLabelPointOfCare1;
    private javax.swing.JLabel jLabelStatus;
    private javax.swing.JLabel jLabelStatus1;
    private javax.swing.JLabel jLabelType;
    private javax.swing.JLabel jLabelType1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanelAdmettre;
    private javax.swing.JPanel jPanelMort;
    private javax.swing.JPanel jPanelPersonne;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextFieldBatiment;
    private javax.swing.JTextField jTextFieldBatiment1;
    private javax.swing.JTextField jTextFieldChambre;
    private javax.swing.JTextField jTextFieldChambre1;
    private javax.swing.JTextField jTextFieldEtage;
    private javax.swing.JTextField jTextFieldEtage1;
    private javax.swing.JTextField jTextFieldLit;
    private javax.swing.JTextField jTextFieldLit1;
    private javax.swing.JTextField jTextFieldPointOfCare;
    private javax.swing.JTextField jTextFieldPointOfCare1;
    private javax.swing.JTextField jTextFieldStatus;
    private javax.swing.JTextField jTextFieldStatus1;
    private javax.swing.JLabel labelFin;
    private javax.swing.JLabel labelFin1;
    private javax.swing.JLabel labelFin2;
    private javax.swing.JLabel labelFin3;
    private javax.swing.JLabel labelFin4;
    private javax.swing.JLabel labelFin5;
    private javax.swing.JPanel panelAction;
    private javax.swing.JPanel panelAdmission;
    private javax.swing.JPanel panelCard;
    private javax.swing.JPanel panelConexion;
    private javax.swing.JPanel panelDecharge;
    private javax.swing.JPanel panelMessage;
    private javax.swing.JPanel panelPatient;
    private javax.swing.JPanel panelPatient1;
    private javax.swing.JPanel panelSousAction;
    private javax.swing.JPanel paneltransfere;
    // End of variables declaration//GEN-END:variables
}
